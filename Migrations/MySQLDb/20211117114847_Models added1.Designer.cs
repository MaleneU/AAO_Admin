// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using AAO_AdminPanel.Data;

namespace AAO_AdminPanel.Migrations.MySQLDb
{
    [DbContext(typeof(MySQLDbContext))]
    [Migration("20211117114847_Models added1")]
    partial class Modelsadded1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("AAO_AdminPanel.Models.AvailabilityModel", b =>
                {
                    b.Property<int>("AvailabilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DriverID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("AvailabilityID");

                    b.ToTable("Availability");
                });

            modelBuilder.Entity("AAO_AdminPanel.Models.DepartmentModel", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("AAO_AdminPanel.Models.DriverLicenseModel", b =>
                {
                    b.Property<int>("LicenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("DriverID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.HasKey("LicenseID");

                    b.ToTable("DriverLicense");
                });

            modelBuilder.Entity("AAO_AdminPanel.Models.DriverModel", b =>
                {
                    b.Property<int>("DriverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("StartLocationID")
                        .HasColumnType("int");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("DriverID");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("AAO_AdminPanel.Models.LicenseModel", b =>
                {
                    b.Property<int>("LicenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("License")
                        .HasColumnType("text");

                    b.HasKey("LicenseID");

                    b.ToTable("License");
                });

            modelBuilder.Entity("AAO_AdminPanel.Models.RequestModel", b =>
                {
                    b.Property<int>("DriverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TripID")
                        .HasColumnType("int");

                    b.HasKey("DriverID");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("AAO_AdminPanel.Models.StartLocationModel", b =>
                {
                    b.Property<int>("StartLocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.HasKey("StartLocationID");

                    b.ToTable("StartLocation");
                });

            modelBuilder.Entity("AAO_AdminPanel.Models.StatusModel", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("StatusID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("AAO_AdminPanel.Models.TrafficModel", b =>
                {
                    b.Property<int>("TrafficID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("StartCountryID")
                        .HasColumnType("int");

                    b.Property<int>("StopCountryID")
                        .HasColumnType("int");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("TrafficID");

                    b.ToTable("Traffic");
                });

            modelBuilder.Entity("AAO_AdminPanel.Models.TripHasDriverModel", b =>
                {
                    b.Property<int>("DriverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TripID")
                        .HasColumnType("int");

                    b.HasKey("DriverID");

                    b.ToTable("TripHasDriver");
                });

            modelBuilder.Entity("AAO_AdminPanel.Models.TripModel", b =>
                {
                    b.Property<int>("TripID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContactID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionOfTrip")
                        .HasColumnType("text");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateAndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StopDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TrafficID")
                        .HasColumnType("int");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("TripID");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("AAO_AdminPanel.Models.TypeModel", b =>
                {
                    b.Property<int>("TypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("TypeID");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("AAO_AdminPanel.Models.UserModel", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
